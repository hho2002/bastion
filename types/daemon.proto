syntax = "proto3";

package types;

message User {
    string account = 2;
    string nickname = 3;
    bool is_admin = 4;
    bool is_blocked = 5;
    int64 created_at = 6;
    int64 updated_at = 7;
    int64 viewed_at = 8;
}

message ListUsersRequest {
}

message ListUsersResponse {
    repeated User users = 1;
}

message CreateUserRequest {
    string account = 1;
    string password = 2;
    string nickname = 3;
    bool is_admin = 4;
}

message CreateUserResponse {
    User user = 1;
}

message TouchUserRequest {
    string account = 1;
}

message TouchUserResponse {
    User user = 1;
}

message UpdateUserRequest {
    string account = 1;
    bool update_nickname = 2;
    string nickname = 3;
    bool update_password = 4;
    string password = 5;
    bool update_is_admin = 6;
    bool is_admin = 7;
    bool update_is_blocked = 8;
    bool is_blocked = 9;
}

message UpdateUserResponse {
    User user = 1;
}

message AuthenticateUserRequest {
    string account = 1;
    string password = 2;
}

message AuthenticateUserResponse {
    User user = 1;
}

message GetUserRequest {
    string account = 1;
}

message GetUserResponse {
    User user = 1;
}

service UserService {
    rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {
    }

    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
    }

    rpc TouchUser (TouchUserRequest) returns (TouchUserResponse) {
    }

    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
    }

    rpc AuthenticateUser (AuthenticateUserRequest) returns (AuthenticateUserResponse) {
    }

    rpc GetUser (GetUserRequest) returns (GetUserResponse) {
    }
}

message Node {
    string hostname = 1;
    string user = 2;
    string address = 3;
    string source = 4;
    int64 created_at = 5;
    int64 viewed_at = 6;
    bool is_key_managed = 7;
}

message ListNodesRequest {
}

message ListNodesResponse {
    repeated Node nodes = 1;
}

message PutNodeRequest {
    string hostname = 1;
    string user = 2;
    string address = 3;
    string source = 4;
}

message PutNodeResponse {
    Node node = 1;
}

message DeleteNodeRequest {
    string hostname = 1;
}

message DeleteNodeResponse {
}

message GetNodeRequest {
    string hostname = 1;
}

message GetNodeResponse {
    Node node = 1;
}

message TouchNodeRequest {
    string hostname = 1;
}

message TouchNodeResponse {
    Node node = 1;
}

message UpdateNodeRequest {
    string hostname = 1;
    bool update_is_key_managed = 2;
    bool is_key_managed = 3;
}

message UpdateNodeResponse {
    Node node = 1;
}

service NodeService {
    rpc ListNodes (ListNodesRequest) returns (ListNodesResponse) {
    }

    rpc PutNode (PutNodeRequest) returns (PutNodeResponse) {
    }

    rpc DeleteNode (DeleteNodeRequest) returns (DeleteNodeResponse) {
    }

    rpc GetNode (GetNodeRequest) returns (GetNodeResponse) {
    }

    rpc TouchNode (TouchNodeRequest) returns (TouchNodeResponse) {
    }

    rpc UpdateNode (UpdateNodeRequest) returns (UpdateNodeResponse) {
    }
}

message Key {
    string fingerprint = 1;
    string account = 2;
    string name = 3;
    string source = 4;
    int64 created_at = 5;
    int64 viewed_at = 6;
}

message ListKeysRequest {
    string account = 1;
}

message ListKeysResponse {
    repeated Key keys = 1;
}

message CreateKeyRequest {
    string fingerprint = 1;
    string account = 2;
    string name = 3;
    string source = 4;
}

message CreateKeyResponse {
    Key key = 1;
}

message DeleteKeyRequest {
    string fingerprint = 1;
}

message DeleteKeyResponse {
}

message GetKeyRequest {
    string fingerprint = 1;
}

message GetKeyResponse {
    Key key = 1;
}

message TouchKeyRequest {
    string fingerprint = 1;
}

message TouchKeyResponse {
    Key key = 1;
}

service KeyService {
    rpc ListKeys (ListKeysRequest) returns (ListKeysResponse) {
    }

    rpc CreateKey (CreateKeyRequest) returns (CreateKeyResponse) {
    }

    rpc DeleteKey (DeleteKeyRequest) returns (DeleteKeyResponse) {
    }

    rpc GetKey (GetKeyRequest) returns (GetKeyResponse) {
    }

    rpc TouchKey (TouchKeyRequest) returns (TouchKeyResponse) {
    }
}

message MasterKey {
    string fingerprint = 1;
    string public_key = 2;
}

message ListMasterKeysRequest {
}

message ListMasterKeysResponse {
    repeated MasterKey master_keys = 1;
}

message UpdateAllMasterKeysRequest {
    repeated MasterKey master_keys = 1;
}

message UpdateAllMasterKeysResponse {
}

service MasterKeyService {
    rpc ListMasterKeys (ListMasterKeysRequest) returns (ListMasterKeysResponse) {
    }

    rpc UpdateAllMasterKeys (UpdateAllMasterKeysRequest) returns (UpdateAllMasterKeysResponse) {
    }
}

message Grant {
    string account = 1;
    string hostname_pattern = 2;
    string user = 3;
    int64 expired_at = 4;
    int64 created_at = 5;
}

message GrantItem {
    string hostname = 1;
    string user = 2;
    int64 expired_at = 3;
}

message PutGrantRequest {
    string account = 1;
    string hostname_pattern = 2;
    string user = 3;
    int64 expired_at = 4;
}

message PutGrantResponse {
    Grant grant = 1;
}

message ListGrantsRequest {
    string account = 1;
}

message ListGrantsResponse {
    repeated Grant grants = 1;
    int64 now = 2;
}

message ListGrantItemsRequest {
    string account = 1;
}

message ListGrantItemsResponse {
    repeated GrantItem grant_items = 1;
}

message DeleteGrantRequest {
    string account = 1;
    string hostname_pattern = 2;
    string user = 3;
}

message DeleteGrantResponse {
}

message CheckGrantRequest {
    string account = 1;
    string hostname = 2;
    string user = 3;
}

message CheckGrantResponse {
    bool ok = 1;
}

service GrantService {
    rpc PutGrant (PutGrantRequest) returns (PutGrantResponse) {
    }

    rpc ListGrants (ListGrantsRequest) returns (ListGrantsResponse) {
    }

    rpc DeleteGrant (DeleteGrantRequest) returns (DeleteGrantResponse) {
    }

    rpc CheckGrant (CheckGrantRequest) returns (CheckGrantResponse) {
    }

    rpc ListGrantItems (ListGrantItemsRequest) returns (ListGrantItemsResponse) {
    }
}

message Session {
    int64 id = 1;
    string account = 2;
    string command = 3;
    int64 created_at = 4;
    int64 finished_at = 5;
    bool is_recorded = 6;
}

message CreateSessionRequest {
    string account = 1;
    string command = 2;
    bool is_recorded = 3;
}

message CreateSessionResponse {
    Session session = 1;
}

message FinishSessionRequest {
    int64 id = 1;
}

message FinishSessionResponse {
    Session session = 1;
}

message ListSessionsRequest {
    int32 skip = 1;
    int32 limit = 2;
}

message ListSessionsResponse {
    int32 skip = 1;
    int32 limit = 2;
    int32 total = 3;
    repeated Session sessions = 4;
}

message GetSessionRequest {
    int64 id = 1;
}

message GetSessionResponse {
    Session session = 1;
}

service SessionService {
    rpc CreateSession (CreateSessionRequest) returns (CreateSessionResponse) {
    }

    rpc FinishSession (FinishSessionRequest) returns (FinishSessionResponse) {
    }

    rpc ListSessions (ListSessionsRequest) returns (ListSessionsResponse) {
    }

    rpc GetSession (GetSessionRequest) returns (GetSessionResponse) {
    }
}

message Token {
    int64 id = 1;
    string account = 2;
    string token = 3;
    string description = 4;
    int64 created_at = 5;
    int64 viewed_at = 6;
}

message CreateTokenRequest {
    string account = 1;
    string description = 2;
}

message CreateTokenResponse {
    Token token = 1;
}

message GetTokenRequest {
    int64 id = 1;
    string token = 2;
}

message GetTokenResponse {
    Token token = 1;
}

message TouchTokenRequest {
    string token = 1;
    int64 id = 2;
}

message TouchTokenResponse {
    Token token = 1;
}

message ListTokensRequest {
    string account = 1;
}

message ListTokensResponse {
    repeated Token tokens = 1;
}

message DeleteTokenRequest {
    int64 id = 1;
}

message DeleteTokenResponse {
}

service TokenService {
    rpc CreateToken (CreateTokenRequest) returns (CreateTokenResponse) {
    }

    rpc GetToken (GetTokenRequest) returns (GetTokenResponse) {
    }

    rpc TouchToken (TouchTokenRequest) returns (TouchTokenResponse) {
    }

    rpc ListTokens (ListTokensRequest) returns (ListTokensResponse) {
    }

    rpc DeleteToken (DeleteTokenRequest) returns (DeleteTokenResponse) {
    }
}

message ReplayFrame {
    int64 session_id = 1;
    uint32 timestamp = 2;
    uint32 type = 3;
    bytes payload = 4;
}

message ReplaySearchResult {
    int64 session_id = 1;
    uint32 timestamp = 2;
    string account = 3;
    int64 created_at = 4;
}

message WriteReplayResponse {
}

message ReadReplayRequest {
    int64 session_id = 1;
}

message SubmitReplayRequest {
    int64 session_id = 1;
}

message SubmitReplayResponse {
}

message SearchReplayRequest {
    string keyword = 1;
}

message SearchReplayResponse {
    repeated ReplaySearchResult results = 1;
}

service ReplayService {
    rpc WriteReplay (stream ReplayFrame) returns (WriteReplayResponse) {
    }

    rpc ReadReplay (ReadReplayRequest) returns (stream ReplayFrame) {
    }

    rpc SubmitReplay(SubmitReplayRequest) returns (SubmitReplayResponse) {
    }

    rpc SearchReplay(SearchReplayRequest) returns (SearchReplayResponse) {
    }
}